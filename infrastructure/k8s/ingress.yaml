apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kiro-ingress
  annotations:
    kubernetes.io/ingress.class: 'nginx'
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/proxy-body-size: '50m'
    nginx.ingress.kubernetes.io/proxy-connect-timeout: '30'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '60'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '60'
    nginx.ingress.kubernetes.io/rate-limit: '100'
    nginx.ingress.kubernetes.io/rate-limit-window: '1m'
    nginx.ingress.kubernetes.io/enable-cors: 'true'
    nginx.ingress.kubernetes.io/cors-allow-origin: '*'
    nginx.ingress.kubernetes.io/cors-allow-methods: 'GET, POST, PUT, DELETE, PATCH, OPTIONS'
    nginx.ingress.kubernetes.io/cors-allow-headers: 'Content-Type, Authorization, X-Requested-With'
    # Enable caching for static assets
    nginx.ingress.kubernetes.io/server-snippet: |
      location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
      }
    # Rate limiting for auth endpoints
    nginx.ingress.kubernetes.io/configuration-snippet: |
      location ~ ^/api/(auth|login|register) {
        limit_req zone=auth burst=5 nodelay;
      }
spec:
  tls:
    - hosts:
        - api.kiro-erp.com
        - app.kiro-erp.com
      secretName: kiro-tls-secret
  rules:
    - host: api.kiro-erp.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kiro-api-service
                port:
                  number: 80
    - host: app.kiro-erp.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kiro-web-service
                port:
                  number: 80

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: kiro-network-policy
spec:
  podSelector:
    matchLabels:
      app: kiro-api
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
        - podSelector:
            matchLabels:
              app: kiro-web
      ports:
        - protocol: TCP
          port: 4000
  egress:
    - to:
        - podSelector:
            matchLabels:
              app: postgres
      ports:
        - protocol: TCP
          port: 5432
    - to:
        - podSelector:
            matchLabels:
              app: redis
      ports:
        - protocol: TCP
          port: 6379
    - to: []
      ports:
        - protocol: TCP
          port: 53
        - protocol: UDP
          port: 53
